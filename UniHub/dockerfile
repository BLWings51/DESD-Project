# Use a Python image for the backend
FROM python:3.10-slim

# Set the working directory
WORKDIR /app

# Explicitly create a new sources.list with HTTPS (This is for connection issues with apt-get update)
RUN echo "deb https://deb.debian.org/debian bookworm main contrib non-free" > /etc/apt/sources.list
RUN echo "deb https://deb.debian.org/debian-security bookworm-security main contrib non-free" >> /etc/apt/sources.list
RUN echo "deb https://deb.debian.org/debian bookworm-updates main contrib non-free" >> /etc/apt/sources.list

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

COPY waitForDB.sh ./waitForDB.sh
RUN chmod +x ./waitForDB.sh

# Setting up psql with postgreSQL client
RUN apt-get update && apt-get install -y postgresql-client && rm -rf /var/lib/apt/lists/*

# Copying only the dependency list first to leverage cache
COPY requirements.txt .

# Installing Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copying the rest of the application code
COPY . .

COPY importDB.sh ./importDB.sh
RUN chmod +x ./importDB.sh

# Expose Django's default port
EXPOSE 8000

# Runing migrations and starting the server
CMD ["sh", "-c", "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]